<Project>

  <PropertyGroup>
    <BV_GeneratedLiteralAssemblyInfoFile Condition="'$(BV_GeneratedLiteralAssemblyInfoFile)' ==''">$(IntermediateOutputPath)$(MSBuildProjectName).LiteralAssemblyInfo.g$(DefaultLanguageSourceExtension)</BV_GeneratedLiteralAssemblyInfoFile>
  </PropertyGroup>

  <!--
    This must run before every invocation of CoreCompile to ensure that all compiler runs
    see the generated assembly info. There is at least one scenario involving Xaml
    where CoreCompile is invoked without other potential hooks such as Compile or CoreBuild,
    etc., so we hook directly on to CoreCompile. Furthermore, we  must run *after*
    PrepareForBuild to ensure that the intermediate directory has been created.

    Targets that generate Compile items are also expected to run before
    BeforeCompile targets (common targets convention).
  -->
  <Target Name="BV_GenerateLiteralAssemblyInfo"
          BeforeTargets="BeforeCompile;CoreCompile"
          DependsOnTargets="PrepareForBuild;BV_GenerateLiteralAssemblyInfoCore" />

  <!--
    To allow version changes to be respected on incremental builds (e.g. through CLI parameters),
    create a hash of all assembly attributes so that the cache file will change with the calculated
    assembly attribute values and msbuild will then execute BV_GenerateLiteralAssemblyInfoCore
    to generate a new file.
  -->
  <Target Name="BV_CreateGeneratedLiteralAssemblyInfoInputsCacheFile">

    <PropertyGroup>
      <BV_GeneratedLiteralAssemblyInfoInputsCacheFile>$(IntermediateOutputPath)$(MSBuildProjectName).LiteralAssemblyInfoInputs.cache</BV_GeneratedLiteralAssemblyInfoInputsCacheFile>
    </PropertyGroup>

    <!-- We only use up to _Parameter1 for most attributes, but other targets may add additional assembly attributes with multiple parameters. -->
    <Hash ItemsToHash="@(LiteralAssemblyAttribute->'%(Identity)%(_Parameter1)%(_Parameter2)%(_Parameter3)%(_Parameter4)%(_Parameter5)%(_Parameter6)%(_Parameter7)%(_Parameter8)%(_Parameter9)%(_Parameter10)')">
      <Output TaskParameter="HashResult" PropertyName="BV_LiteralAssemblyAttributesHash" />
    </Hash>

    <WriteLinesToFile Lines="$(BV_LiteralAssemblyAttributesHash)" File="$(BV_GeneratedLiteralAssemblyInfoInputsCacheFile)" Overwrite="True" WriteOnlyWhenDifferent="True" />

    <ItemGroup>
      <FileWrites Include="$(BV_GeneratedLiteralAssemblyInfoInputsCacheFile)" />
    </ItemGroup>

  </Target>

  <Target Name="BV_GenerateLiteralAssemblyInfoCore"
          Condition="@(LiteralAssemblyAttribute->Count()) > 0"
          DependsOnTargets="BV_CreateGeneratedLiteralAssemblyInfoInputsCacheFile"
          Inputs="$(BV_GeneratedLiteralAssemblyInfoInputsCacheFile)"
          Outputs="$(BV_GeneratedLiteralAssemblyInfoFile)">

    <WriteLiteralAssemblyAttributes LiteralAssemblyAttributes="@(LiteralAssemblyAttribute)"
                                    Language="$(Language)"
                                    OutputPath="$(BV_GeneratedLiteralAssemblyInfoFile)" />

    <ItemGroup>
      <Compile Remove="$(BV_GeneratedLiteralAssemblyInfoFile)" />
      <Compile Include="$(BV_GeneratedLiteralAssemblyInfoFile)" />
      <FileWrites Remove="$(BV_GeneratedLiteralAssemblyInfoFile)" />
      <FileWrites Include="$(BV_GeneratedLiteralAssemblyInfoFile)" />
    </ItemGroup>

  </Target>

</Project>