<Project>

  <!-- Save the value of GenerateLiteralAssemblyInfo for later determination of whether to issue a warning.
       Force to false if Language property is not set (happens with several auxiliary targets, e.g. _IsProjectRestoreSupported),
       to avoid warning BVW1400 on projects in supported languages. -->
  <PropertyGroup>
    <BV_GenerateLiteralAssemblyInfo>$(GenerateLiteralAssemblyInfo)</BV_GenerateLiteralAssemblyInfo>
    <BV_GenerateLiteralAssemblyInfo Condition="'$(Language)' == ''">false</BV_GenerateLiteralAssemblyInfo>
  </PropertyGroup>

  <!-- Coalesce GenerateLiteralAssemblyInfo to a boolean value; force to false for projects in unsupported languages. -->
  <PropertyGroup>
    <GenerateLiteralAssemblyInfo Condition="'$(Language)' != 'C#' And '$(Language)' != 'VB'">false</GenerateLiteralAssemblyInfo>
    <GenerateLiteralAssemblyInfo Condition="'$(GenerateLiteralAssemblyInfo)' == ''">true</GenerateLiteralAssemblyInfo>
    <GenerateLiteralAssemblyInfo Condition="'$(GenerateLiteralAssemblyInfo)' != 'true'">false</GenerateLiteralAssemblyInfo>
  </PropertyGroup>

  <!-- Issue a warning if GenerateLiteralAssemblyInfo was set to true for a project in an unsupported language. -->
  <ItemGroup>
    <EvaluationWarning Condition="'$(BV_GenerateLiteralAssemblyInfo)' == 'true' And !$(GenerateLiteralAssemblyInfo)"
                       Include="BVW1400"
                       Text="Language '$(Language)' is not supported by LiteralAssemblyInfo." />
  </ItemGroup>

  <Import Project="$(MSBuildThisFileDirectory)Module.Core.targets"
          Condition="$(GenerateLiteralAssemblyInfo)" />

</Project>
