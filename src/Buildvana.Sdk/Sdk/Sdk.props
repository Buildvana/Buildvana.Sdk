<Project InitialTargets="BV_CheckSdkTargetsImport;BV_LogEvaluationErrors;BV_CreateArtifactsDirectory">

  <!-- Signal that Sdk.props has been imported. -->
  <PropertyGroup>
    <BV_SdkPropsHasBeenImported>true</BV_SdkPropsHasBeenImported>
  </PropertyGroup>

  <!--
    Rules for HomeDirectory:
      * the Git submodule above the project's directory (look for a file named .git)
      * the Git repository above the project's directory (look for a file named HEAD in a .git subdirectory)
        NOTE: Check for ".git/HEAD", not ".git\HEAD", because the latter only works on Windows.
              MSBuild doesn't convert directory separators on the second argument to GetDirectoryNameOfFileAbove,
              probably due to https://github.com/microsoft/msbuild/issues/1024
  -->
  <PropertyGroup>
    <HomeDirectory>$([MSBuild]::GetDirectoryNameOfFileAbove('$(MSBuildProjectDirectory)','.git'))</HomeDirectory>
    <HomeDirectory Condition="'$(HomeDirectory)' == ''">$([MSBuild]::GetDirectoryNameOfFileAbove('$(MSBuildProjectDirectory)','.git/HEAD'))</HomeDirectory>
  </PropertyGroup>

  <!-- Normalize HomeDirectory if found. -->
  <PropertyGroup>
    <HomeDirectory Condition="'$(HomeDirectory)' != ''">$([MSBuild]::NormalizeDirectory('$(HomeDirectory)'))</HomeDirectory>
  </PropertyGroup>

  <!-- Check that HomeDirectory has been configured. -->
  <ItemGroup>
    <EvaluationError Condition="'$(HomeDirectory)' == ''"
                     Include="BVE1003"
                     Text="Home directory not defined." />
  </ItemGroup>

  <!-- BV_IsConfigured is true if HomeDirectory is configured. -->
  <PropertyGroup>
    <BV_IsConfigured>true</BV_IsConfigured>
    <BV_IsConfigured Condition="'$(HomeDirectory)' == ''">false</BV_IsConfigured>
  </PropertyGroup>

  <!-- ArtifactsDirectory = 'artifacts' directory under HomeDirectory. -->
  <PropertyGroup Condition="$(BV_IsConfigured)">
    <ArtifactsDirectory Condition="$(BV_IsConfigured)">$(HomeDirectory)artifacts\</ArtifactsDirectory>
  </PropertyGroup>

  <!-- BuildvanaSdkDirectory is where this file is. -->
  <PropertyGroup>
    <BuildvanaSdkDirectory>$(MSBuildThisFileDirectory)</BuildvanaSdkDirectory>
  </PropertyGroup>

  <!-- BuildvanaModulesDirectory is where modules are. -->
  <PropertyGroup>
    <BuildvanaModulesDirectory>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)..\Modules'))</BuildvanaModulesDirectory>
  </PropertyGroup>

  <!-- Seelct TFM for compiled tasks -->
  <PropertyGroup Condition="'$(MSBuildRuntimeType)' == 'Full'">
    <BV_SdkTasksTfm Condition="'$(MSBuildVersion)' &lt; '16.0'">net46</BV_SdkTasksTfm>
    <BV_SdkTasksTfm Condition="'$(MSBuildVersion)' &gt;= '16.0'">net472</BV_SdkTasksTfm>
  </PropertyGroup>
  <PropertyGroup Condition="'$(MSBuildRuntimeType)' == 'Core'">
    <BV_SdkTasksTfm Condition="'$(MSBuildVersion)' &lt; '16.7'">netcoreapp2.1</BV_SdkTasksTfm>
    <BV_SdkTasksTfm Condition="'$(MSBuildVersion)' &gt;= '16.7' And '$(MSBuildVersion)' &lt; '16.8'">netcoreapp3.1</BV_SdkTasksTfm>
    <BV_SdkTasksTfm Condition="'$(MSBuildVersion)' &gt;= '16.8'">net5.0</BV_SdkTasksTfm>
  </PropertyGroup>
  <PropertyGroup Condition="'$(MSBuildRuntimeType)' == 'Mono'">
    <BV_SdkTasksTfm>net472</BV_SdkTasksTfm>
  </PropertyGroup>
  <ItemGroup Condition="'$(BV_SdkTasksTfm)' == ''">
    <EvaluationError Include="BVE1004"
                     Text="Could not determine a suitable target framework for compiled tasks." />
  </ItemGroup>

  <!-- Select compiled tasks assembly -->
  <PropertyGroup>
    <BV_SdkTasksAssembly>$(MSBuildThisFileDirectory)$(BV_SdkTasksTfm)\Buildvana.Sdk.dll</BV_SdkTasksAssembly>
  </PropertyGroup>

  <!-- Declare compiled tasks -->
  <UsingTask TaskName="ConvertPfxToSnk" AssemblyFile="$(BV_SdkTasksAssembly)" />
  <UsingTask TaskName="WriteLiteralAssemblyAttributes" AssemblyFile="$(BV_SdkTasksAssembly)" />
  <UsingTask TaskName="ParseVersionFile" AssemblyFile="$(BV_SdkTasksAssembly)" />
  <UsingTask TaskName="WriteThisAssemblyClass" AssemblyFile="$(BV_SdkTasksAssembly)" />

  <!-- Import modules -->
  <Import Condition="$(BV_IsConfigured)" Project="$(BuildvanaModulesDirectory)**\BeforeModules.props" />
  <Import Condition="$(BV_IsConfigured)" Project="$(BuildvanaModulesDirectory)**\Module.props" />
  <Import Condition="$(BV_IsConfigured)" Project="$(BuildvanaModulesDirectory)**\AfterModules.props" />

  <!-- Import BeforeCommon.props, Common.props, and AfterCommon.props files  -->
  <Import Condition="$(BV_IsConfigured)" Project="$(BuildvanaSdkDirectory)Import.BeforeCommon.props.proj" />
  <Import Condition="$(BV_IsConfigured)" Project="$(BuildvanaSdkDirectory)Import.Common.props.proj" />
  <Import Condition="$(BV_IsConfigured)" Project="$(BuildvanaSdkDirectory)Import.AfterCommon.props.proj" />

  <!-- Check whether Sdk.targets has been imported. -->
  <Target Name="BV_CheckSdkTargetsImport">

    <ItemGroup>
      <EvaluationError Condition="'$(BV_SdkTargetsHasBeenImported)' != 'true'"
                       Include="BVE1001"
                       Text="Sdk.targets not imported." />
    </ItemGroup>

  </Target>

  <!-- Output messages, warnings, and errors generated during the evaluation phase. -->
  <Target Name="BV_LogEvaluationErrors">

    <!-- Evaluation messages have a default importance of High in Debug builds, Normal in Release builds. -->
    <PropertyGroup Condition="'$(EvaluationMessageImportance)' == ''">
      <EvaluationMessageImportance Condition="'$(Configuration)' != 'Debug'">Normal</EvaluationMessageImportance>
      <EvaluationMessageImportance Condition="'$(Configuration)' == 'Debug'">High</EvaluationMessageImportance>
    </PropertyGroup>

    <Message Condition="'@(EvaluationMessage)' != ''"
             Text="%(Identity)"
             Importance="$(EvaluationMessageImportance)" />

    <Warning Condition="'@(EvaluationWarning)' != ''"
             Code="%(Identity)"
             Text="%(Text)"
             File="$(MSBuildProjectFullPath)" />

    <Error Condition="'@(EvaluationError)' != ''"
           Code="%(Identity)"
           Text="%(Text)"
           File="$(MSBuildProjectFullPath)" />

  </Target>

  <!-- Create ArtifactsDirectory if necessary. -->
  <Target Name="BV_CreateArtifactsDirectory">

    <MakeDir Directories="$(ArtifactsDirectory)" />

  </Target>

</Project>