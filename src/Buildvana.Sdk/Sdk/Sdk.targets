<Project InitialTargets="BV_CheckSdkPropsImport">

  <!-- Signal that Sdk.targets has been imported. -->
  <PropertyGroup>
    <BV_SdkTargetsHasBeenImported>true</BV_SdkTargetsHasBeenImported>
  </PropertyGroup>

  <!-- If Sdk.props has not been imported, BV_IsConfigured will be empty.
       Set it to false to skip importing modules and common targets. -->
  <PropertyGroup>
    <BV_IsConfigured Condition="'$(BV_IsConfigured)' != 'true'">false</BV_IsConfigured>
  </PropertyGroup>

  <!-- Check that Sdk.props and Sdk.targets are from the same directory.
       Otherwise it probably means they've been imported from different SDK versions
       and may be incompatible with each other. -->
  <ItemGroup>
    <EvaluationError
      Condition="'$(BuildvanaSdkDirectory)' != '' And '$(BuildvanaSdkDirectory)' != '$(MSBuildThisFileDirectory)'"
      Include="BVE1002"
      Text="Sdk.props and Sdk.targets are in different directories." />
  </ItemGroup>

  <!-- Determine the kind of project. -->
  <PropertyGroup>
    <BV_IsNoTargetsProject>false</BV_IsNoTargetsProject>
    <BV_IsTestProject>false</BV_IsTestProject>
    <BV_IsLibraryProject>false</BV_IsLibraryProject>
    <BV_IsExeProject>false</BV_IsExeProject>
  </PropertyGroup>
  <Choose>
    <When Condition="'$(UsingMicrosoftNoTargetsSdk)' == 'true'">
      <PropertyGroup>
        <BV_IsNoTargetsProject>true</BV_IsNoTargetsProject>
      </PropertyGroup>
    </When>
    <When Condition="($(MSBuildProjectName.EndsWith('.Tests')) And '$(IsTestProject)' != 'false') Or '$(IsTestProject)' == 'true'">
      <PropertyGroup>
        <BV_IsTestProject>true</BV_IsTestProject>
      </PropertyGroup>
    </When>
    <When Condition="'$(OutputType)' == 'Library' And '$(BV_IsTestProject)' != 'true'">
      <PropertyGroup>
        <BV_IsLibraryProject>true</BV_IsLibraryProject>
      </PropertyGroup>
    </When>
    <When Condition="'$(OutputType)' == 'Exe' Or '$(OutputType)' == 'WinExe'">
      <PropertyGroup>
        <BV_IsExeProject>true</BV_IsExeProject>
      </PropertyGroup>
    </When>
  </Choose>
  
  <!-- Import BeforeCommon.targets, Common.targets, and AfterCommon.targets files  -->
  <Import Condition="$(BV_IsConfigured)" Project="$(BuildvanaSdkDirectory)Import.BeforeCommon.targets.proj" />
  <Import Condition="$(BV_IsConfigured)" Project="$(BuildvanaSdkDirectory)Import.Common.targets.proj" />
  <Import Condition="$(BV_IsConfigured)" Project="$(BuildvanaSdkDirectory)Import.AfterCommon.targets.proj" />

  <!-- Import modules -->
  <Import Condition="$(BV_IsConfigured)" Project="$(BuildvanaModulesDirectory)**\BeforeModules.targets" />
  <Import Condition="$(BV_IsConfigured)" Project="$(BuildvanaModulesDirectory)**\Module.targets" />
  <Import Condition="$(BV_IsConfigured)" Project="$(BuildvanaModulesDirectory)**\AfterModules.targets" />

  <!-- Import PackageVersions.props after everything else, because it updates PackageReference items,
       so the relevant items must already exist. -->
  <Import Condition="$(BV_IsConfigured)" Project="$(MSBuildThisFileDirectory)PackageVersions.props" />

  <!-- Check whether Sdk.props has been imported.
       We cannot use EvaluationError for this,
       because the logic that handles it is in Sdk.props. -->
  <Target Name="BV_CheckSdkPropsImport">

    <Error
      Condition="'$(BV_SdkPropsHasBeenImported)' != 'true'"
      Code="BVE1000"
      Text="Sdk.props not imported."
      File="$(MSBuildProjectFullPath)" />

  </Target>

</Project>